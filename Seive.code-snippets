{
	"Seive": {
		"prefix": "Seive",
		"body": [
		  "template < typename T = int > struct Seive {",
		  "",
		  "    vector < bool > is_prime;",
		  "    vector < T > primes;",
		  "",
		  "    Seive(int n){",
		  "        is_prime.assign(n + 1, true);",
		  "        is_prime[0] = is_prime[1] = false;",
		  "        for(ll i = 2; i <= sqrt(n); i++)",
		  "            if(is_prime[i])",
		  "                for(ll j = i * i; j <= n; j += i) is_prime[j] = false;",
		  "    }",
		  "",
		  "    // Build vector with prime numbers",
		  "",
		  "    void get_primes(int n){",
		  "        for(int i = 1; i <= n; i++)",
		  "            if(is_prime[i])",
		  "                primes.push_back(i);",
		  "    }",
		  "",
		  "    // Print the prime numbers",
		  "",
		  "    void print_primes(){",
		  "        for(auto& p : primes)",
		  "            cout << p << \" \";",
		  "        cout << \"\\n\";",
		  "    }",
		  "",
		  "};"
		],
		"description": "Seive"
	}
}